ENV['ANSIBLE_CONFIG'] = "./provisioning/ansible.cfg"

Vagrant.configure("2") do |config|
  # Base VM OS configuration.
  config.vm.box = "debian/bookworm64"
  config.vm.provider :virtualbox do |v|
    v.memory = 2048
    v.cpus = 2
  end
  ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_ed25519.pub").first.strip
  
  # Define two VMs with static private IP addresses.
  boxes = [
    { :name => "backup",
      :ip => "192.168.56.11",
    },
    { :name => "client",
      :ip => "192.168.56.12",
    }
  ]

  # Provision each of the VMs.
  boxes.each do |opts|
    config.vm.define opts[:name] do |config|
      config.vm.hostname = opts[:name]
      config.vm.network "private_network", ip: opts[:ip]
      config.vm.provision 'shell', inline: 'mkdir -p /root/.ssh'
      config.vm.provision 'shell', inline: "echo #{ssh_pub_key} >> /root/.ssh/authorized_keys"
      config.vm.provision 'shell', inline: "echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys", privileged: false
    end
  end
  # Настройки backup
  config.vm.define "backup" do |server|
    # Создание диска
    server.vm.disk :disk, name: "backup", size: "2GB"
    # Инициализация диска
    server.vm.provision "shell", inline: <<-SHELL
      sudo apt update && apt install parted -y
      sudo parted /dev/sdb --script mklabel gpt
      sudo parted /dev/sdb --script mkpart primary ext4 0% 100%
      sudo mkfs.ext4 /dev/sdb1
      sudo mkdir -p /var/backup
      echo '/dev/sdb1 /var/backup ext4 defaults 0 0' | sudo tee -a /etc/fstab
      sudo mount -a
    SHELL
  end
end
